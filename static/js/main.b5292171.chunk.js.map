{"version":3,"sources":["assets/img/profile.jpeg","assets/img/projects-thumbs/ecommerce-1.png","assets/img/projects-thumbs/atomic-1.png","assets/img/projects-thumbs/tarian-1.png","components/navbar/Navbar.js","components/cover/Cover.js","components/Projects/Cards.js","components/Projects/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","props","useEffect","setTimeout","keyLeft","document","getElementById","keyRight","style","transition","width","className","src","profile","alt","id","Cover","Cards","project","thumb","nombre","desc","target","href","url","rel","Projects","listProjects","key","require","map","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,sC,6HCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,qGC6C5BC,EAzCA,SAACC,GAkBZ,OAdAC,qBAAW,WACPC,YAAY,WACR,IAAMC,EAAUC,SAASC,eAAe,YAClCC,EAAWF,SAASC,eAAe,aAEzCF,EAAQI,MAAMC,WAAa,eAC3BL,EAAQI,MAAME,MAAQ,QAEtBH,EAASC,MAAMC,WAAa,eAC5BF,EAASC,MAAME,MAAQ,UACtB,OACN,IAIC,yBAAKC,UAAU,SACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,WACb,yBAAKC,IAAKC,IAASC,IAAI,MAEzB,yBAAKH,UAAU,eACb,4BAAI,0BAAMA,UAAU,QAAhB,WAAJ,iBACA,2CAAgB,0BAAMA,UAAU,QAAhB,qBAIlB,yBAAKA,UAAU,OAAOI,GAAG,YA7BxB,KAgCD,yBAAKJ,UAAU,OAAOI,GAAG,aA/BxB,Q,MCkBFC,MArBf,SAAef,GACX,OACI,6BAASU,UAAU,YACf,yBAAKA,UAAU,4DACX,wBAAIA,UAAU,UAAd,mBACA,wBAAIA,UAAU,eAAd,yMAKA,wBAAIA,UAAU,eAAd,mHAGA,yBAAKA,UAAU,sBACf,4BAAQA,UAAU,sBAAlB,oBCeDM,G,MA7BD,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEZ,OACI,kBAAC,WAAD,KACI,yBAAKP,UAAU,QACX,yBAAKA,UAAU,cACX,yBAAKC,IAAKM,EAAQC,MAAOL,IAAK,SAASI,EAAQE,UAEnD,wBAAIT,UAAU,cAAcO,EAAQE,QACpC,uBAAGT,UAAU,aAAaO,EAAQG,MAClC,yBAAKV,UAAU,kCACX,0BACIA,UAAU,wBADd,gBAKA,uBAAGW,OAAO,SACNC,KAAML,EAAQM,IACdb,UAAU,qBACVc,IAAI,uBAHR,qBC+BLC,EA5CE,WACb,IAAMC,EAAe,CACjB,CACIP,OAAQ,YACRQ,IAAK,EACLJ,IAAK,qCACLH,KAAM,0QACNF,MAAOU,EAAQ,KAEnB,CACIT,OAAQ,6BACRQ,IAAK,EACLJ,IAAK,oDACLH,KAAM,0QACNF,MAAOU,EAAQ,KAEnB,CACIT,OAAQ,sBACRQ,IAAK,EACLJ,IAAK,0CACLH,KAAM,uLACNF,MAAOU,EAAQ,MAIvB,OACI,6BAASlB,UAAU,YACf,yBAAKA,UAAU,aACX,wBAAIA,UAAU,UAAd,+BACA,yBAAKA,UAAU,uBAEVgB,EAAaG,KAAK,SAAAZ,GAAO,OACtB,kBAAC,EAAD,CACIU,IAAKV,EAAQU,IACbV,QAASA,WCrBtBa,MAZf,WAGE,OACE,yBAAKpB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFcqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFlC,SAASC,eAAe,SDyHpB,kBAAmBkC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b5292171.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.19267044.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/ecommerce-1.02d7c061.png\";","module.exports = __webpack_public_path__ + \"static/media/atomic-1.0cdecfe7.png\";","module.exports = __webpack_public_path__ + \"static/media/tarian-1.fe6a1a59.png\";","import React, {useEffect} from 'react';\nimport './Navbar.css'\nimport profile from '../../assets/img/profile.jpeg'\n\nconst Navbar = (props) => {\n    const key1 = \"{\";\n    const key2 = \"}\";\n\n    useEffect( () => {\n        setTimeout( () => {\n            const keyLeft = document.getElementById(\"key-left\");\n            const keyRight = document.getElementById(\"key-right\");\n\n            keyLeft.style.transition = \"all .3s ease\";\n            keyLeft.style.width = \"10rem\";\n\n            keyRight.style.transition = \"all .3s ease\";\n            keyRight.style.width = \"10rem\"\n          }, 1000);\n    }, []);\n\n\n    return (\n        <div className=\"barra\">\n            <div className=\"container\">\n                <div className=\"profile\">\n                  <img src={profile} alt=\"\" />\n                </div>\n                <div className=\"cover-title\">\n                  <h1><span className=\"azul\">Octavio</span> Ibáñez</h1>\n                  <h3>Ingeniero en<span className=\"azul\"> informática</span></h3>\n                </div>\n\n                \n                <div className=\"keys\" id=\"key-left\">\n                {key1}\n                </div>\n                <div className=\"keys\" id=\"key-right\">\n                {key2}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Navbar;","import React from 'react';\nimport './Cover.css';\n\nfunction Cover(props) {\n    return (\n        <section className=\"parallax\">\n            <div className=\"container cover-text animate__animated animate__fadeInUp\">\n                <h2 className=\"titulo\">Acerca de mí</h2>\n                <h3 className=\"text-center\">\n                    Hola, mi nombre es Octavio Ibáñez, soy estudiante de ingeniería en informática\n                    en UPIICSA del IPN.\n                    Actualmente curso el 8° semetre, siendo éste mi último periodo en la carrera.\n                </h3>\n                <h3 className=\"text-center\">\n                    Me apasiona el desarrollo web, tanto back-end como front-end, aunque he trabajado más con éste último.\n                </h3>\n                <div className=\"btn-container flex\">\n                <button className=\"button btn-primary\">Saber más</button>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default Cover;","import React, {Fragment} from 'react';\n\n\nconst Cards = ({project}) => {\n    \n    return (\n        <Fragment>\n            <div className=\"card\">\n                <div className=\"card-thumb\">\n                    <img src={project.thumb} alt={\"thumb_\"+project.nombre}></img> \n                </div>\n                <h3 className=\"card-title\">{project.nombre}</h3>\n                <p className=\"card-desc\">{project.desc}</p>\n                <div className=\"btn-container flex two-buttons\">\n                    <span\n                        className=\"button btn-secundary\"\n                    >\n                        Saber más\n                    </span>\n                    <a target=\"_blank\" \n                        href={project.url} \n                        className=\"button btn-primary\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        Ver proyecto\n                    </a>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default Cards;","import React from 'react';\nimport './Projects.css'\n\nimport Card from './Cards';\n\n\nconst Projects = () => {\n    const listProjects = [\n        {\n            nombre: 'Ecommerce', \n            key: 1,\n            url: 'http://mx80.prueba.site/~smartleg/',\n            desc: 'Tienda dinámica, con carrito de compras, responsiva, barra de búsqueda, productos relacionados y susceptible a promociones. Encriptación del datos para evitar vulnerabilidades. Consume API de paquetería y próximamente integración de API de pago.',\n            thumb: require('../../assets/img/projects-thumbs/ecommerce-1.png')\n        },\n        {\n            nombre: 'Página de reclutamiento', \n            key: 2,\n            url: 'https://0ctavioibanez.github.io/atomiclabs-react/',\n            desc: 'Página de reclutamiento para la empresa AtomicLabs. Ésta versión fue hecha en react, y esta otra con jquery, css y php, donde se consume una API para el envío de mensajes con un código de verificación. https://github.com/0ctavioIbanez/atomiclabs',\n            thumb: require('../../assets/img/projects-thumbs/atomic-1.png')\n        },\n        {\n            nombre: 'Despacho de aboados', \n            key: 3,\n            url: 'https://0ctavioibanez.github.io/tarian/',\n            desc: 'Landing page para un buffet de abogados, donde se estaba incorporando un cobro recurrente con la API de PayPal, aunque a petición del despacho, no se continuó con el proyecto',\n            thumb: require('../../assets/img/projects-thumbs/tarian-1.png')\n        }\n    ];\n\n    return (\n        <section className=\"projects\">\n            <div className=\"container\">\n                <h2 className=\"titulo\">Algúnos de mis proyectos</h2>\n                <div className=\"card-container flex\">\n\n                    {listProjects.map( project => (\n                        <Card \n                            key={project.key}\n                            project={project}\n                        />\n                    ))}\n                   \n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default Projects;","import React from 'react';\n\n//Components\nimport Navbar from './components/navbar/Navbar';\nimport Cover from './components/cover/Cover';\nimport Projects from './components/Projects/Projects';\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Cover />\n      <Projects />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}